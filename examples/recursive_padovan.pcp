fn add(a: int, b: int) -> int {
    asm {
        "        lw    r1,-8(r30)",
        "        lw    r2,-4(r30)",
        "        add   r1,r1,r2",
    }
}

fn sub(a: int, b: int) -> int {
    asm {
        "        lw    r1,-8(r30)",
        "        lw    r2,-4(r30)",
        "        sub   r1,r1,r2",
    }
}

fn less_than(a: int, b: int) -> bool {
    asm {
        "        lw    r1,-8(r30)",
        "        lw    r2,-4(r30)",
        "        slt   r1,r1,r2",
    }
}

# Compute the nth padovan number recursively
fn pad(n: int) -> int {
    if less_than(n, 3) {
        return 1;
    }

    add(pad(sub(n, 2)), pad(sub(n, 3)))
}

fn main() {
    let test = pad(10);
}
